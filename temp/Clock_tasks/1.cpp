/*
### **Задача 1: Классные часы**

**Условие:**  
Создайте класс `Clock`, позволяющий хранить время. Добавьте метод `void tick()`, увеличивающий время на одну секунду, и метод `void print()`, выводящий время в формате `hh:mm:ss`.

Также должен быть конструктор, в который можно передать до 3 значений – часы, минуты и секунды соответственно. Параметры конструктора для простоты можно сделать со значениями по умолчанию, равными 0.

**Формат входных данных:**  
В первой строке входных данных вводятся 3 целых числа `H`, `M` и `S` – часы, минуты и секунды соответственно. Гарантируется, что данные верные.  
Во второй строке вводится натуральное число `T` – количество секунд, в течение которых время должно изменяться.

**Формат выходных данных:**  
Выведите `T` строк в формате `hh:mm:ss` – время после каждой новой секунды.

**Примеры:**

**Входные данные:**
```
1 34 5
5
```

**Выходные данные:**
```
01:34:06
01:34:07
01:34:08
01:34:09
01:34:10
```

---
*/

#include <iostream>
#include <cstdio>

class Clock{
protected:
    int seconds;
public:
    Clock(int h = 0, int m = 0, int s = 0){
        seconds = h * 3600 + m * 60 + s;
    };

    void tick(){
        seconds++;
    };
    
    void print(){
        printf("%02d:%02d:%02d\n", getH(), getM(), getS());
    };

    int getH(){
        return seconds / 3600;
    };

    int getM(){
        return seconds % 3600 / 60;
    };

    int getS(){
        return seconds % 3600 % 60;
    };
};

int main(){
    int h,m,s,t;
    std::cin >> h >> m >> s;
    std::cin >> t;

    Clock clock(h,m,s);

    for (int i = 0; i < t; i++){
        clock.tick();
        clock.print();
    };

    return 0;
}